rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function writesAllowed(uid) {
      // Allow writes unless a usage/{uid} doc exists with stopWrites == true
      return !exists(/databases/$(database)/documents/usage/$(uid)) ||
             get(/databases/$(database)/documents/usage/$(uid)).data.stopWrites != true;
    }
    match /users/{userId}/words/{docId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId && writesAllowed(userId);
    }
    match /users/{userId}/reviews/{docId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId && writesAllowed(userId);
    }
    match /usage/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // server-managed by Functions
    }
  }
}
